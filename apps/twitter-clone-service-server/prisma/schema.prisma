datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  bio            String?
  comments       Comment[]
  createdAt      DateTime  @default(now())
  email          String?
  id             String    @id @default(cuid())
  likes          Like[]
  password       String?
  profilePicture Json?
  tweets         Tweet[]
  updatedAt      DateTime  @updatedAt
  username       String?
}

model Tweet {
  comments  Comment[]
  content   String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  likes     Like[]
  updatedAt DateTime  @updatedAt
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model Follower {
  createdAt  DateTime   @default(now())
  follower   Follower?  @relation(name: "FollowerOnFollowers", fields: [followerId], references: [id])
  followerId String?
  followers  Follower[] @relation(name: "FollowerOnFollowers")
  following  String?
  id         String     @id @default(cuid())
  updatedAt  DateTime   @updatedAt
}

model Comment {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  tweet     Tweet?   @relation(fields: [tweetId], references: [id])
  tweetId   String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Like {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  tweet     Tweet?   @relation(fields: [tweetId], references: [id])
  tweetId   String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}
